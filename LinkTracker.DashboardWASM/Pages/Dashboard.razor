@page "/"
@using LinkTracker.DashboardWASM.Components
@using LinkTracker.DashboardWASM.Components.DashboardWidgets
@using LinkTracker.DashboardWASM.Services
@using LinkTracker.Shared.Extensions
@using LinkTracker.Shared.Models

<PageTitle>Home</PageTitle>

<div class="pa-4">
    <MudText Typo="Typo.h1">DASHBOARD</MudText>

    <TimeWidget T="Visit" DataProvider="@dataProvider" TimeSpan="Timespan" Title="Visits Count"/>

    <MudStack>
        <MudTextField Placeholder="Referral" @bind-Value="referral" Clearable />
        <MudDatePicker PickerVariant="PickerVariant.Inline" @bind-Date="startDate" Placeholder="Start Date" Clearable/>
        <MudDatePicker PickerVariant="PickerVariant.Inline" @bind-Date="endDate" Placeholder="End Date" Clearable/>
        <MudSelect @bind-Value="Timespan" @bind-Value:after=ReloadAnalytics>
            <MudSelectItem Value="TimeSpan.FromHours(1)">Hourly</MudSelectItem>
            <MudSelectItem Value="TimeSpan.FromDays(1)">Daily</MudSelectItem>
            <MudSelectItem Value="TimeSpan.FromDays(7)">Weekly</MudSelectItem>
        </MudSelect>
        <MudButton OnClick="@(async () => await ReloadAnalytics())">Reload</MudButton>
    </MudStack>

    @foreach (Visit visit in visits)
    {
        <p>@visit.Filename at @visit.UtcTime (Referral: @visit.ReferralId)</p>
    }
</div>

@code {
    [Inject]
    IFetchAnalytics analytics { get; set; }

    private IEnumerable<Visit> visits = [];
    private string? referral = null;
    private DateTime? startDate = null;
    private DateTime? endDate = null;
    TimeSpan Timespan = TimeSpan.FromDays(1);
    AnalyticsQuery query = new AnalyticsQuery();

    AnalyticsWidgetDataProvider dataProvider;

    protected override async Task OnParametersSetAsync()
    {
        dataProvider = new AnalyticsWidgetDataProvider(analytics, query, Timespan);
        await ReloadAnalytics();
        await base.OnParametersSetAsync();
    }

    private async Task ReloadAnalytics()
    {
        dataProvider.Query = new();

        if (startDate is not null) dataProvider.Query = dataProvider.Query.Where(AnalyticsFilter.StartDateTime(startDate.Value));
        if (endDate is not null) dataProvider.Query = dataProvider.Query.Where(AnalyticsFilter.EndDateTime(endDate.Value));
        if (!string.IsNullOrWhiteSpace(referral)) dataProvider.Query = dataProvider.Query.Where(AnalyticsFilter.Referral(referral));

        StateHasChanged();
    }
}